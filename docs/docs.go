// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "charles.tenorio.dev@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/prd/add": {
            "post": {
                "description": "Cria um novo produto com base nos dados fornecidos no corpo da requisição",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Cria um novo produto",
                "parameters": [
                    {
                        "description": "Dados do produto a ser criado",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Campos obrigatórios não foram fornecidos",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "500": {
                        "description": "Erro ao criar o produto",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    }
                }
            }
        },
        "/prd/all": {
            "get": {
                "description": "Retorna todos os produtos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Retorna todos os produtos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    }
                }
            }
        },
        "/prd/delete/": {
            "delete": {
                "description": "Exclui um produto com base no ID externo fornecido no cabeçalho da requisição",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Exclui um produto existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID externo do produto",
                        "name": "id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Produto excluído com sucesso",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "400": {
                        "description": "O campo ID é obrigatório",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "500": {
                        "description": "Erro ao excluir o produto",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    }
                }
            }
        },
        "/prd/getbyid": {
            "get": {
                "description": "Retorna um produto com base no ID externo fornecido no cabeçalho da requisição",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "producs"
                ],
                "summary": "Retorna um produto pelo seu ID externo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID externo do produto",
                        "name": "id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "O campo ID é obrigatório",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "500": {
                        "description": "Erro ao converter produto para JSON",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    }
                }
            }
        },
        "/prd/update/": {
            "patch": {
                "description": "Atualiza um produto com base no ID externo fornecido no cabeçalho da requisição",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Atualiza um produto existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID externo do produto",
                        "name": "id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dados do produto a ser atualizado",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "O campo ID é obrigatório",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "404": {
                        "description": "Produto não encontrado",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    },
                    "500": {
                        "description": "Erro ao atualizar o produto",
                        "schema": {
                            "$ref": "#/definitions/handler.HttpMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.HttpMsg": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Fazpay API",
	Description:      "API for Faz.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
